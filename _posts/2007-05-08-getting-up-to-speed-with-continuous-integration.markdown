--- 
wordpress_id: 311
layout: post
title: Getting up to speed with continuous integration
wordpress_url: /archive/getting-up-to-speed-with-continuous-integration/
---

<p>Lately, I&#39;ve been looking into getting up to speed with continuous integration after watching the <a href="http://www.dnrtv.com/default.aspx?showID=64">recent dnrTV</a> with <a href="http://jayflowers.com/joomla/">Jay Flowers</a> and <a href="http://www.cifactory.org/joomla/">CI Factory</a>.&nbsp; At Telligent, we&#39;ve had a continuous integration server setup for quite a while, though it is primarily maintained by <a href="http://blog.danbartels.com/default.aspx">Dan Bartels</a>&nbsp;and it handles building of CS and some of the other main projects.&nbsp; I&#39;ve been wanting to get things expanded to some of the add-ons for CS, with a huge goal of doing nightly builds where it does the whole enchilada: builds the latest CS,&nbsp;updates the version numbers of the add-ons, does a release build against the latest CS, obfuscates, and then packages and MSI and makes it available somewhere.&nbsp; If I could do this, I&#39;d be in heaven, as release time would instantly become a breeze for me (aside from all the coding).</p> <p>I very quickly got up and going with <a href="http://confluence.public.thoughtworks.org/display/CCNET/Welcome+to+CruiseControl.NET">CruiseControl.Net</a> and using MSBuild to do the building.&nbsp; Going off Dan&#39;s existing configurations, it was a breeze.&nbsp; The problem comes in when you want to do the more advanced stuff like auto versioning, executing commands for obfuscating, and building the MSI with the Visual Studio Setup project.&nbsp; So my options are to either come up with some sort of batch execution stuff (maybe PowerShell scripts), or to head into the zone of ccnet + nant + msbuild.&nbsp; The advantage to using nant is that there are a ton of community tasks out there for doing&nbsp;exactly what I need.&nbsp; The disadvantage is a higher level of complexity, especially if you&#39;re unfamiliar with nant.</p> <p>I&#39;ve tried to use CI Factory to get up and going quickly, since in the dnrTV, they got up and going with building SubText in the hour long show.&nbsp; So far though, I can see some disadvantages to using CI Factory.&nbsp; First, it likes to dictate your file structure.&nbsp; It has its way of organization, and it is all setup to use it that way.&nbsp; Try changing it around, and the scripts it generates can start to unravel.&nbsp; Second, it likes to maintain its own copies of all the executables, which while I can see the reason for it, I don&#39;t need it.&nbsp; I don&#39;t need multiple copies of nant, subversion, and ccnet.&nbsp; In fact, I just want one unified ccnet instance.&nbsp; And third, for me, it just hasn&#39;t worked so far.&nbsp; I&#39;m using the latest beta version, and while it is definitely a sweet utility, it still shows signs of being a beta.&nbsp; Even when I try to let it use its file structure and all, it still get fouled up, likely because I can&#39;t move the existing projects into its desired folder structure.&nbsp; But it gets things like failing to start svn, after it has already got a list of the recent changes.&nbsp; And since it has this huge maze of configuration files and build scripts, it isn&#39;t necessarily an easy fix for someone who is new to ccnet, new to nant, and new to CI Factory.</p> <p>I had tried to take the CI Factory scripts and mold them into my desired folder structure and everything, but I only got part of the way.&nbsp; Ultimately, I think I&#39;ll end up writing my own nant scripts, maybe using CI Factory as a basis for some of the more advanced stuff, but follow the &quot;start simple, then add more&quot; route rather than &quot;start huge and fine tune&quot;.</p>
         
